/* 
* MOBILE (<768px) *********************************************************
* fixture --------------------------------------- sm
* # of columns ---------------------------------- 4
* gutter ---------------------------------------- 20px
* margin ---------------------------------------- 5px
* container-size -------------------------------- 100% - (5px * 2)

* TABLET (>=768px) ********************************************************
* fixture --------------------------------------- md
* # of columns ---------------------------------- 12
* gutter ---------------------------------------- 20px
* margin ---------------------------------------- 30px
* container-size -------------------------------- 100% - (30px * 2)
* max-container-size ---------------------------- 960px

* DESKTOP (>=1200px) ******************************************************
* fixture --------------------------------------- lg
* # of columns ---------------------------------- 12
* gutter ---------------------------------------- 20px
* unit ------------------------------------------ 75px
* margin ---------------------------------------- auto
* container-size -------------------------------- 1140px
* max-container-size ---------------------------- 1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  // 모바일(sm)부터 시작
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto; // 수직 가운데 정렬

  .row {
    display: flex;
    flex-wrap: wrap; // 컨텐츠를 억지로 한 줄에 욱여넣지 않고 다음 줄로 넘기는 속성
  }

  // 속성 선택자를 이용해 column과 관련된 모든 요소 호출
  // [속성이름^="속성값"]선택자 -> 특정 속성의 속성값이 특정 문자열로 시작하는 요소를 모두 선택
  [class^='col-'] {
    padding: 0 $gutter / 2;
  }

  // @for 반복문
  // 1) @for (변수) from (시작 숫자) to (끝 숫자) {...}
  // 2) to(끝 숫자 비포함) 대신 through(끝 숫자 포함)도 사용 가능
  // 3) 문자열의 변수를 값으로 치환 -> 보간법(#{변수}) 처리
  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns); // scss 내장함수를 통해 소숫점을 퍼센트로 변환
    }
  }

  // 미디어 쿼리
  // @media (media-type) and (media-feature-rule) {...}
  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
